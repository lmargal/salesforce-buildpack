#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

START_TIME=$SECONDS

### Configure environment
# Debug, echo every command
#set -x
#set -o errexit    # always exit on error
#set -o pipefail   # don't ignore exit codes when piping output
#set -o nounset    # fail on unset variables
#unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

### Configure salesforce directories
SALESFORCE_DIR_NAME=".salesforce"
SALESFORCE_DIR=$BUILD_DIR/$SALESFORCE_DIR_NAME
SALESFORCE_CACHE_DIR=$CACHE_DIR/$SALESFORCE_DIR_NAME

### Load dependencies
source $BP_DIR/lib/common.sh
#source $BP_DIR/lib/node.sh
#source $BP_DIR/lib/libs.sh

# set defaults for optional config vars
#: ${SALESFORCE_BUILDPACK_VERBOSE:="false"}
#: ${SALESFORCE_BUILDPACK_DEBUG:="false"}

echo ""
highlight "Welcome to Salesforce Buildpack!!"
echo ""


###   E X P O R T   C O N F I G   V A R S
#export_env_dir

mkdir -p $SALESFORCE_DIR
export SALESFORCE_DIR=$SALESFORCE_DIR


###   S F D X   C L I
status "Installing SFDX CLI and SFDX plugins"

# vendor directories
VENDORED_SFDX_CLI="vendor/sfdx-cli"

# download and extract the client tarball
rm -rf "$BUILD_DIR/$VENDORED_SFDX_CLI"

# install sfdx cli w/ all sfdx plugins
cd "$BUILD_DIR"
: ${SFDX_CLI_VERSION:="LATEST"}
SFDX_CLI_URL=https://developer.salesforce.com/media/salesforce-cli/sfdx-buildpack-${SFDX_CLI_VERSION}.tar.gz
if [ "$SALESFORCE_BUILDPACK_DEBUG" == "true" ]; then
    debug "SFDX_CLI_URL=$SFDX_CLI_URL"
fi
if [[ -z "$(which wget)" ]]; then
  curl -s $SFDX_CLI_URL | tar xzf -
else
  wget -qO- $SFDX_CLI_URL | tar xzf -
fi

export PATH="$PATH:$BUILD_DIR/$VENDORED_SFDX_CLI/heroku/bin"
export XDG_DATA_HOME="$BUILD_DIR/.local"
export XDG_CACHE_HOME="$BUILD_DIR/.cache"

#if [ "$SALESFORCE_BUILDPACK_DEBUG" == "true" ]; then
#    debug $BUILD_DIR/$VENDORED_SFDX_CLI/heroku/bin:
#    ls -Llsrt $BUILD_DIR/$VENDORED_SFDX_CLI/heroku/bin
#fi

# touch autoupdate file to prevent 'heroku update' (which breaks
# tar as 'heroku update' alters what is being tar'd)
mkdir -p $XDG_CACHE_HOME/heroku
touch $XDG_CACHE_HOME/heroku/autoupdate

# log installed plugins
sfdx plugins

status "SFDX CLI and SFDX plugins installation complete"

###   W R I T E   E N V   P R O F I L E   S C R I P T
# write env script to set various vars so release and test scripts
# can use heroku cli and plugins
export SALESFORCE_DEPLOY_DIR="\$HOME/$SALESFORCE_DIR_NAME"
mkdir -p $BUILD_DIR/.profile.d
cat <<EOF >$BUILD_DIR/.profile.d/salesforce-env.sh
# set path so release and customer scripts and use heroku cli and node exes
export PATH="\$PATH:\$HOME/$VENDORED_SFDX_CLI/heroku/bin"
# set so heroku cli can re-use plugins
export XDG_DATA_HOME="\$HOME/.local"
# set so heroku cli can see heroku/autoupdate to not trigger update
export XDG_CACHE_HOME="\$HOME/.cache"
# disable encryption 'cause lib secret requires head
export SFDX_DISABLE_ENCRYPTION=true;

# setup env to support sfdx plugin commands
mkdir -p .local/.sfdx
EOF

chmod +x $BUILD_DIR/.profile.d/salesforce-env.sh

highlight "DONE!  Completed in $(($SECONDS - $START_TIME))s"
